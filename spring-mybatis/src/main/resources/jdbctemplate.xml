<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:tx="http://www.springframework.org/schema/tx"

       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <!--开启注解的支持-->
    <context:annotation-config/>
    <!--指定要扫描的包，这个包下的注解会有效-->
    <context:component-scan base-package="com.xingbg.spring.jdbctemplate"/>

    <!--引入properties配置-->
    <context:property-placeholder location="classpath:datasource.properties"/>

    <!--开启aop支持 proxy-target-class="false"(默认)是使用jdk的代理方式去实现，proxy-target-class="true"使用cglib-->
    <aop:aspectj-autoproxy />

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--数据库驱动-->
        <property name="driverClassName" value="${jdbc.driverClass}" />
        <!--连接数据库的url-->
        <property name= "url" value="${jdbc.jdbcUrl}" />
        <!--连接数据库的用户名-->
        <property name="username" value="${jdbc.user}" />
        <!--连接数据库的密码-->
        <property name="password" value="${jdbc.password}" />
    </bean>
    <!--配置JDBC模板-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--默认必须使用数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>



    <!-- 事务管理器，依赖于数据源 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--代碼聲明式事務-->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
    </bean>
    <!-- 编写通知：对事务进行增强（通知），需要编写切入点和具体执行事务的细节 -->
    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 给切入点方法添加事务详情，name表示方法名称，*表示任意方法名称，propagation用于设置传播行为，read-only表示隔离级别，是否只读 &ndash;&gt;-->
            <!--<tx:method name="find*" propagation="SUPPORTS"-->
                       <!--rollback-for="Exception" />-->
            <!--<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"-->
                       <!--read-only="false" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; aop编写，让Spring自动对目标生成代理，需要使用AspectJ的表达式 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 切入点 &ndash;&gt;-->
        <!--<aop:pointcut expression="execution(* com.xingbg.spring.jdbctemplate.*.*(..))"-->
                      <!--id="txPointCut" />-->
        <!--&lt;!&ndash; 切面：将切入点与通知整合 &ndash;&gt;-->
        <!--<aop:advisor pointcut-ref="txPointCut" advice-ref="txAdvice" />-->
    <!--</aop:config>-->

    <!-- 注册事务管理驱动 -->
    <tx:annotation-driven transaction-manager="txManager"/>
</beans>
