<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       
       xmlns:aop="http://www.springframework.org/schema/aop"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.springframework.org/schema/aop 
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="calculateAop" class="com.xingbg.spring.aop.CalculateAopImpl"/>
    <bean id="beforeAop" class="com.xingbg.spring.aop.BeforeLogAspect"/>
    <bean id="afterAop" class="com.xingbg.spring.aop.AfterLogAspect"/>

    <bean id="diyPointCut" class="com.xingbg.spring.aop.DiyPointCut"/>

    <bean id="annotationAop" class="com.xingbg.spring.aop.AnnotationAspect"/>

    <!--开启注解支持 proxy-target-class="false"(默认)是使用jdk的代理方式去实现，proxy-target-class="true"使用cglib-->
    <aop:aspectj-autoproxy />

    <!--配置aop-->
    <aop:config>
        <!--实现方式1-->
        <aop:pointcut id="cut1" expression="execution(* com.xingbg.spring.aop.CalculateAopImpl.*(..))"/>
        <aop:advisor advice-ref="beforeAop" pointcut-ref="cut1"/>
        <aop:advisor advice-ref="afterAop" pointcut-ref="cut1"/>

        <!--实现方式2：自定义切面 相对简单，没有第一种方法强大-->
        <aop:aspect ref="diyPointCut">
            <!--切入点-->
            <aop:pointcut id="c2" expression="execution(* com.xingbg.spring.aop.CalculateAopImpl.*(..))"/>
            <!--通知-->
            <aop:before method="before" pointcut-ref="c2"/>
            <aop:after method="after" pointcut-ref="c2"/>
            <aop:after-returning method="afterReturning" pointcut-ref="c2" returning="re"/>
        </aop:aspect>
    </aop:config>
</beans>